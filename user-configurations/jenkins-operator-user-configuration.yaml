apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: user-config-secrets
stringData:
  EXECUTORS_AMOUNT: "6"
  SYSTEM_MESSAGE: "Tiago, isto Ã© secreto!"


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-operator-user-configuration
data:
  1-configure-executors.groovy: |
    import jenkins.*
    import jenkins.model.*
    import hudson.*
    import hudson.model.*
    Jenkins jenkins = Jenkins.getInstance()
    jenkins.setNumExecutors(Integer.valueOf(secrets["EXECUTORS_AMOUNT"]))
    jenkins.save()
  1-configure-theme.groovy: | 
    import jenkins.*
    import jenkins.model.*
    import hudson.*
    import hudson.model.*
    import org.jenkinsci.plugins.simpletheme.ThemeElement
    import org.jenkinsci.plugins.simpletheme.CssTextThemeElement
    import org.jenkinsci.plugins.simpletheme.CssUrlThemeElement

    Jenkins jenkins = Jenkins.getInstance()

    def decorator = Jenkins.instance.getDescriptorByType(org.codefirst.SimpleThemeDecorator.class)

    List<ThemeElement> configElements = new ArrayList<>();
    configElements.add(new CssTextThemeElement("DEFAULT"));
    configElements.add(new CssUrlThemeElement("https://cdn.rawgit.com/afonsof/jenkins-material-theme/gh-pages/dist/material-light-green.css"));
    decorator.setElements(configElements);
    decorator.save();

    jenkins.save()
  # 2-matrix-auth.yaml: |
  #   jenkins:
  #     authorizationStrategy:
  #       projectMatrix:
  #         permissions:
  #         - "Overall/Read:authenticated"
  #         - "Overall/Administer:jenkins-operator"
  #         - "Agent/Build:authenticated"
  #         - "Credentials/View:authenticated"
  #         - "Job/Build:authenticated"
  #         - "Job/Cancel:authenticated"
  #         - "Job/Discover:authenticated"
  #         - "Job/Read:authenticated"
  #         - "Job/Workspace:authenticated"
  #         - "Lockable Resources/Reserve:authenticated"
  #         - "Lockable Resources/Unlock:authenticated"
  #         - "Lockable Resources/View:authenticated"
  #         - "Run/Delete:authenticated"
  #         - "Run/Replay:authenticated"
  #         - "Run/Update:authenticated"
  #         - "SCM/Tag:authenticated"
  #         - "View/Configure:authenticated"
  #         - "View/Create:authenticated"
  #         - "View/Delete:authenticated"
  #         - "View/Read:authenticated"
  1-system-message.yaml: |
    jenkins:
      systemMessage: ${SYSTEM_MESSAGE}
  # 3-configure-github-oauth.groovy: |
  #   import hudson.security.SecurityRealm
  #   import org.jenkinsci.plugins.GithubSecurityRealm
  #   String githubWebUri = 'https://github.com'
  #   String githubApiUri = 'https://api.github.com'
  #   String clientID = 'f4854dc98525b877e06e'
  #   String clientSecret = 'ad1c96751ba38e5119c3fa5a62b4d49f55e76702'
  #   String oauthScopes = 'read:org'
  #   SecurityRealm github_realm = new GithubSecurityRealm(githubWebUri, githubApiUri, clientID, clientSecret, oauthScopes)
  #   //check for equality, no need to modify the runtime if no settings changed
  #   if(!github_realm.equals(Jenkins.instance.getSecurityRealm())) {
  #       Jenkins.instance.setSecurityRealm(github_realm)
  #       Jenkins.instance.save()
    # }
# 3-configure-github-authorization-strategy.groovy: |
#     import org.jenkinsci.plugins.GithubAuthorizationStrategy
#     import hudson.security.AuthorizationStrategy

#     //permissions are ordered similar to web UI
#     //Admin User Names
#     String adminUserNames = 'tiagofglip'
#     //Participant in Organization
#     String organizationNames = ''
#     //Use Github repository permissions
#     boolean useRepositoryPermissions = true
#     //Grant READ permissions to all Authenticated Users
#     boolean authenticatedUserReadPermission = true
#     //Grant CREATE Job permissions to all Authenticated Users
#     boolean authenticatedUserCreateJobPermission = true
#     //Grant READ permissions for /github-webhook
#     boolean allowGithubWebHookPermission = true
#     //Grant READ permissions for /cc.xml
#     boolean allowCcTrayPermission = true
#     //Grant READ permissions for Anonymous Users
#     boolean allowAnonymousReadPermission = true
#     //Grant ViewStatus permissions for Anonymous Users
#     boolean allowAnonymousJobStatusPermission = true

#     AuthorizationStrategy github_authorization = new GithubAuthorizationStrategy(adminUserNames,
#         authenticatedUserReadPermission,
#         useRepositoryPermissions,
#         authenticatedUserCreateJobPermission,
#         organizationNames,
#         allowGithubWebHookPermission,
#         allowCcTrayPermission,
#         allowAnonymousReadPermission,
#         allowAnonymousJobStatusPermission)
        
#     //check for equality, no need to modify the runtime if no settings changed
#     if(!github_authorization.equals(Jenkins.instance.getAuthorizationStrategy())) {
#         Jenkins.instance.setAuthorizationStrategy(github_authorization)
#         Jenkins.instance.save()
#     }


  6-system-message.yaml: |
    jenkins:
      securityRealm:
        local:
          allowsSignup: false
          users:
            - id: ${user1-name}
              password: ${user1-pass}
            - id: ${user2-name}
              password: ${user2-pass}